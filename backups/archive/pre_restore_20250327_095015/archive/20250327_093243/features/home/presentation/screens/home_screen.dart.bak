import 'package:flutter/material.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import 'package:wandermood/features/auth/domain/providers/auth_provider.dart';
import 'package:wandermood/features/home/presentation/widgets/compact_weather_widget.dart';
import 'package:wandermood/features/home/presentation/widgets/hourly_weather_widget.dart';
import 'package:wandermood/features/home/presentation/widgets/interactive_weather_widget.dart';
import 'package:wandermood/features/mood/presentation/widgets/mood_selection_widget.dart';
import 'package:wandermood/features/mood/presentation/screens/mood_screen.dart';
import 'package:wandermood/features/profile/presentation/screens/profile_screen.dart';

class HomeScreen extends ConsumerStatefulWidget {
  const HomeScreen({super.key});

  @override
  ConsumerState<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends ConsumerState<HomeScreen> {
  int _currentIndex = 0;
  
  final List<Widget> _pages = [
    const DashboardTab(),
    const ExploreTab(),
    const AITab(),
    const AgendaTab(),
    const ProfileScreen(),
  ];
  
  @override
  Widget build(BuildContext context) {
    final user = ref.watch(authStateProvider);
    
    return Container(
      decoration: const BoxDecoration(
        gradient: LinearGradient(
          begin: Alignment.topCenter,
          end: Alignment.bottomCenter,
          colors: [
            Color(0xFFFFAFF4), // Roze
            Color(0xFFFFF5AF), // Geel
          ],
          stops: [0.0, 1.0],
        ),
      ),
      child: Scaffold(
        backgroundColor: Colors.transparent,
        body: SafeArea(
          child: _pages[_currentIndex],
        ),
        bottomNavigationBar: BottomNavigationBar(
          currentIndex: _currentIndex,
          onTap: (index) {
            setState(() {
              _currentIndex = index;
            });
          },
          type: BottomNavigationBarType.fixed,
          backgroundColor: Colors.white,
          selectedItemColor: const Color(0xFF4CAF50),
          unselectedItemColor: Colors.grey,
          items: const [
            BottomNavigationBarItem(
              icon: Icon(Icons.home),
              label: 'Home',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.explore),
              label: 'Explore',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.dataset_outlined),
              label: 'AI',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.calendar_today),
              label: 'Agenda',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.person),
              label: 'Profile',
            ),
          ],
        ),
      ),
    );
  }
}

// Dashboard tab volgens ontwerp
class DashboardTab extends StatefulWidget {
  const DashboardTab({super.key});

  @override
  State<DashboardTab> createState() => _DashboardTabState();
}

class _DashboardTabState extends State<DashboardTab> {
  bool _isWeatherExpanded = false;

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const SizedBox(height: 8),
          
          // Top row with profile, location, weather and notification
          Row(
            children: [
              CircleAvatar(
                radius: 20,
                backgroundImage: const AssetImage('assets/images/5A021649-A3CB-44F9-8A83-50E82214E2EA_4_5005_c.jpeg'),
              ).animate().fadeIn(duration: 400.ms),
              
              const SizedBox(width: 8),
              
              Row(
                children: [
                  const Icon(Icons.location_on, color: Color(0xFF4CAF50), size: 16),
                  const SizedBox(width: 4),
                  Text(
                    'Washington DC',
                    style: TextStyle(
                      fontSize: 14,
                      color: Colors.grey[800],
                    ),
                  ),
                ],
              ).animate().fadeIn(delay: 100.ms, duration: 400.ms),
              
              const Spacer(),
              
              Container(
                padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(0.7),
                  borderRadius: BorderRadius.circular(30),
                ),
                child: Row(
                  children: [
                    const Icon(Icons.wb_sunny, color: Colors.amber, size: 16),
                    const SizedBox(width: 4),
                    Text(
                      '32Â°',
                      style: TextStyle(
                        fontSize: 14,
                        fontWeight: FontWeight.bold,
                        color: Colors.grey[800],
                      ),
                    ),
                  ],
                ),
              ).animate().fadeIn(delay: 200.ms, duration: 400.ms),
              
              const SizedBox(width: 8),
              
              const Icon(Icons.notifications, color: Color(0xFF4CAF50), size: 20)
                  .animate().fadeIn(delay: 300.ms, duration: 400.ms),
            ],
          ),
          
          const SizedBox(height: 16),
          
          Text(
            'Hello, John!',
            style: GoogleFonts.poppins(
              fontSize: 28,
              fontWeight: FontWeight.bold,
              color: const Color(0xFF4CAF50),
            ),
          ).animate().fadeIn(delay: 400.ms, duration: 400.ms).slideY(begin: 0.2, end: 0),
          
          const SizedBox(height: 12),
          
          // Weather widget with expandable view
          Flexible(
            child: GestureDetector(
              onTap: () {
                setState(() {
                  _isWeatherExpanded = !_isWeatherExpanded;
                });
              },
              child: AnimatedCrossFade(
                duration: const Duration(milliseconds: 300),
                crossFadeState: _isWeatherExpanded 
                  ? CrossFadeState.showSecond 
                  : CrossFadeState.showFirst,
                firstChild: HourlyWeatherWidget(
                  onViewChanged: (_) {
                    setState(() {
                      _isWeatherExpanded = true;
                    });
                  },
                ).animate().fadeIn(delay: 500.ms, duration: 500.ms),
                secondChild: CompactWeatherWidget(
                  onViewChanged: (_) {
                    setState(() {
                      _isWeatherExpanded = false;
                    });
                  },
                ).animate().fadeIn(delay: 500.ms, duration: 500.ms),
              ),
            ),
          ),
          
          const SizedBox(height: 16),
          
          Expanded(
            child: MoodSelectionWidget(
              onMoodsSelected: (selectedMoods) {
                print('Selected moods: $selectedMoods');
              },
            ).animate().fadeIn(delay: 600.ms, duration: 400.ms),
          ),
        ],
      ),
    );
  }
}

// Placeholder voor de Explore tab
class ExploreTab extends StatelessWidget {
  const ExploreTab({super.key});

  @override
  Widget build(BuildContext context) {
    return const Center(
      child: Text('Explore'),
    );
  }
}

// Placeholder voor de AI tab
class AITab extends StatelessWidget {
  const AITab({super.key});

  @override
  Widget build(BuildContext context) {
    return const Center(
      child: Text('AI Assistant'),
    );
  }
}

// Placeholder voor de Agenda tab
class AgendaTab extends StatelessWidget {
  const AgendaTab({super.key});

  @override
  Widget build(BuildContext context) {
    return const Center(
      child: Text('Agenda'),
    );
  }
} 